我更多的希望大家在第一个章节能够收获到web自动化测试是什么web的
为什么我们要做外部自动化测试
以及外部自动化测试应该在什么时候启动
还有最后就是web自动化测试应该如何去学习好
那这个是我们本节课的一个课程目标
外部自动化测试它的一个价值体现在哪些方面
也就是说我们为什么要做外部自动化测试
首先我们先来看一下
这个是一个功能测试的这样的一个场景
那在功能测试的过程当中呢
是由我们的测试工程师对我们的被测系统的页面做一些点击或者输入等等类型的一个操作
系统的运行
会产生一定的这个响应
然后我们的测试工程师呢
要拿到这个系统运行的这个响应呢
也就是它的一个实际结果和我们测试用例当中编写的一个预习结果去做一个对比
是我们功能测试的一个场景
那接下来这个相信大家都很熟悉啦
那接下来我们来看一下UES的话
测试他是什么样的场景
那这时候我们来看一下UES的话
是我们的测试工程师
通过这个编程语言去编写我们自动化测试的一个脚本
然后这个编程语言呢
会调用我们的Selina去执行我们自动化测试的一个脚本
然后这个selenium或者swear prize等等自动化测试的一个工具
它会在我们的被测系统上面
一些模拟点击或者输入等等类型操作
然后并会获取
自动化运行的一个响应结果
那我们的编程员拿到这个系统对应的响应结果之后呢
会与我们提前设定好的预习结果去做一个对比
外部自动化测试它的一个价值体现在哪些方面
也就是说我们为什么要做外部自动化测试
首先我们先来看一下
这个是一个功能测试的这样的一个场景
那在功能测试的过程当中呢
是由我们的测试工程师对我们的被测系统的页面做一些点击或者输入等等类型的一个操作
系统的运行
会产生一定的这个响应
要拿到这个系统运行的这个响应呢
也就是它的一个实际结果和我们测试用例当中编写的一个预习结果去做一个对比
是我们功能测试的一个场景
那接下来这个相信大家都很熟悉啦
测试他是什么样的场景
那这时候我们来看一下UES的话
测试场景呢
是我们的测试工程师
通过这个编程语言去编写我们自动化测试的一个脚本
然后这个编程语言呢
会调用我们的Selina去执行我们自动化测试的一个脚本
然后这个selenium或者swear prize等等自动化测试的一个工具
一些模拟点击或者输入等等类型操作
然后并会获取
自动化运行的一个响应结果
那我们的编程员拿到这个系统对应的响应结果之后呢
会与我们提前设定好的预习结果去做一个对比
如果对比一致的话呢
就证明我们的自动化测试用例通过了
那如果对比失败的话呢
代表的是我们自动化测试的用例也就失败了
对吧
是我们UI自动化测试的这样的一个场景
可能这时候有同学会说
那这两个场景到底有什么异同吗
我们回到我们功能测试场景
我们把这张图截取下来好
然后这时候我们再回到我们UI自动化测试的一个场景
然后我们来对比一下这两张图
首先我们先来看动作角色是发生了一些变化
添加编程语言和spinning这两个角色
那动作是什么
动作是以前是测试工程师在系统页面对做点击输入等等类型操作
那现在换成谁
现在换成了我们的编程语言在做这个事情
然后以前是测试工程师拿到实际结果和预期结果去做对比
也换成了编程语言去做这件事情
所以说呢
大家可以看到中间所有的操作
我们来总结一下US动画和功能自动化和这个和这个功能测试他的一个过程
其实都是一模一样的
都是在对系统页面做点击输入等操作
并且
拿到实际结果和预期结果去做对比
那这一部分呢
是他们一样的地方
那我们来看他们不一样的地方是什么
以前是由测试公式
由测试工程师直接去对系统发起操作
那现在呢
所以说其实UI自动化测试和功能自动化测试
从本质上来说他们是一样的
只是说操作的角色从测试工程师换成了编程语言和selenium OK
那这个呢
就是UI自动化测试他的一个场景
以及他和功能测试的一个对比
那这时候可能有同学会问了
那什么时候我们可以去做这个UES的话测试呢
我给大家贴了一张图
左边这张图非常经典
我们先来看这两个坐标
左边这个坐标呢
左边这个纵坐标呢
执行效率越来越低
然后右边这个坐标代表是从下往上
那这时候我们就会发现一个问题
就是UI自动化测试
他是不是执行效率又低
然后成本又高
说老师
那我们是不是可以不用去做S通话测试啦
既然他效率又低
那在这儿我给大家说的是
那这一部分呢
是UI和我们这个接口测试还有单元测试一个对比
那其实只是说对比他们两个
成本又高
对比人力
那肯定还是要一这个自动化测试
它的一个执行效率和成本要更加的的的所以说呢
所以说这个就会导致一个问题
就是我们一定要慎重的去选择哪一些用例适合去做UI
动画测试
哪一些用力不要去做UI自动化测试
在这个图里面透露给我们的讯息
是不是说不要去做UI自动化测试
而是去有选择的去做UI自动化测试
我们一定要明白这个场景
那这时候我们抛出来一个问题
抛出来一个观点
叫做有选择的去做UI自动化测试
那什么叫做选择
那我们哪一些部分可以选择去做UI自动化测试呢
那我在这儿给大家列举了四种场景
基本上也是所有的大厂所对于这个哪些用力适合去做UI自动化测试的一个共识吧
那第一条呢
就是业务的流程不要频繁的改动
如果说你业务的流程
今天和明天都不一样
这个上个迭代和这个迭代都不一样
那这部分不要去做UI自动化测试
因为你脚本刚写好
那下个版本就用不上了
就是UI的元素不要频繁的变动
比如说你们的前端
老师这个动不动就改这
那这种情况也不适合去做UI自动化测试
就是需要频繁回归的一些场景
举个例子
其实这个平凡回归的场景
也就是通常也指的是我们的一个核心场景
比如说举个例子
比如说登录注册呢
通常开发出来
但是这部分功能又永远的存在
那这部分功能呢
我们每个版本可能都得需要去进行测试
它又不会又要频繁回归
但是又不怎么变动的
我们这种登陆注册
我们就很适合去做这个UI自动化测试
那还有第四种呢
比如说我们的一个产品呢
是一个商城这样的一个产品
那对于我们这个商城产品来说
用户的从下单到支付这个过程是不是就是我们的核心场景
那这种核心场景
适合你的业务息息相关的
那如果说你是抖音
如果说你是这个我们的被测产品是抖音或者B站这样的一个视频呢
比如说我们看视频
就是我们的核心场景
那针对于这些核心场景
我们全部都应该去对它做一些自动化测试
那一些非核心
就比如说一些不重要的功能
或者说这个用例级别比较低的一个功能
我们就可以选择性的去做US号测试
那这部分呢
就是叫做什么时候可以做UI自动化测试
那这个呢
测试我们了解完成之后呢
我们在我们的接下来这个大章节
我们主要学习的是web自动化测试的
web自动化测试他有哪些相关技术呢
在我们本次的学习的过程当中呢
主要涉及到的是这个selenium
然后如果是单元测试
并并且会结合我们的一个单元测试框架
就是我们的pad或者我们的Java net5
然后使用这个单元测试框架呢
可以协助我们更好地去做自动化测试
比如说一些参数化的一些场景
或者说一些或者说一些这个断言的场景
使用相关的框架就会方便很多
然后他第三个呢
就是相关的一个测试报告J
像这个测试框架还有测试报告
在我们前面都已经学习过了
那这个就是我们这一个大章节主要所需所使用到的相关的一些技术
那接下来我们再来看
那可能很多同学说
老师这个听说外部自动化测试或者说UI自动化测试在企业当中其实是这个很多企业都不会去做的一个事情
那在这儿可以给大家说的是
那如在这个人力或者说条件允许的情况下
他当然不算优先级最高
优先级最高的一定是接口还有单元
UI自动化测试他也是非常重要的
因为UI自动化测试它涉及到了很多的这个用户体验相关的一些问题
比如说你是一个C端产品
你非常的看重用户体验
那这时候你就非常的有必要去做这样的一个UI自动化测试
那接下来给大家看几个这个UI自动化测试在企业当中的一个实践吧
美团
百度啊
只要是大公司或者说稍微有一点规模的公司
基本都会去做UI自动化测试的
我在这儿给大家举一个例子
就是有赞的一个例子
大家可以点开PPT自己去看
在这儿就可以看到有赞他是怎么样去做UI自动化测试的
他们的一个测试方案是什么
OK
那我们前面了解完这个什么叫做US动画测试
然后什么时候去做UI自动化测试
那我们在本次大章节学习外部自动化测试的时候又会用到哪些知识
那接下来我们就来看一下在外部自动化测试这一块儿
我们应该如何去学习
其实有一个清晰的学习路线
能够提高大家的一个学习效率
然后也让大家的这个学习的成果也是要比一个没有学习路线一个情况下要学的更好
希望给大家介绍这个学习路线
让大家知道该怎么样去学习
哪一些是重要的
哪一些是哪一些是相对来说没那么重要的
然后哪一些是必须要学的
哪一些是需要先学的
哪一些是可以后学的
我们在这个学习路线讲解当中
一定会给大家讲清楚的
那整个学习路线呢
第一个核心思想是由浅入深
就是我们在一开始的时候
尤其是小白的同学
我们在一开始的时候呢
一定要把自己的这个基础打扎实了
所以说我们会从简单的这个内容开始给大家讲解起来
然后呢
第二个
第二个第二个要注意的点呢
就是我们要学会掌握什么是核心
等一下也会给大家说
什么是重点
就是理论要结合实践
我们的录播课程呢
然后前面呢
比如说steam的一些基础API使用
那等大家掌握了steam的基础API使用之后呢
我们会结合一次的这个实战的这样的一个练习
然后让大家去
然后让大家去进行学习
然后首先我们先来看
我们把这个学习的这个路线呢
然后大家只是重点关注初级中级和高级
然后出除了初级中级和高级之外呢
还有这个资深和拓展
还有常见的一些面试题
为什么把这两个模块弱化
前面的强化呢
这个原因就是因为大家可能看到
不要这样不要这样
一定要先去把你前面该学的知识点学好了
把基础夯实了
你这时候再去看面试题
如果说你前面学不好
你一定是理解不了的
好
那包括自身和拓展也是一样
一定要把前面的这些内容学扎实了
再去学一些资深和拓展的一些内容
那在初级里面呢
就是我们要学会selenium常见方法的基本使用
然后在这一块儿实战呢
会给大家带来这个基本的一个web自动化测试用例的编写
一个web测测试用力
它应该是什么样的一个用力结构
它应该有哪些要素
那学完初级还不够
只是说你在学完初级之后呢
你基本对steam有了一个基础的了解了
那接下来中级呢
就是一些外部自动化测试的技巧的一些进阶的使用
我们会教给大家
比如说你的这个用力在执行过程当中如何截图
如何打印报告
然后包括会教大家一些高级定位知识
高级定位只是在UI自动化非常有用
强调一遍非常有用
包括显示等待
然后都会在这个终结部分给大家去进行讲解
我们更专注的就是我们设计模式的一个部分
怎么样去编写这个合理的一个web自动化测试的一个代码
让他的可维护性更高
那就在我们的高级部分去教给大家
首先在高级会教大家这个配配置object设计模式的一些基本概念
然后他的一些基本原则
那在基于这个配置ABS的设计模式之上呢
我们会给大家带来一次这个基于配置object的一个测试用例编写的一个实战
那这一部分呢
就是简单的给大家说一下我们的学习路线
有每一个章节具体的我们要学习的一个内容
那我在这儿给大家标出来哪些是必修
哪一些是这个资深和拓展
那我们还是简单的
那在初级阶段呢
大家可以看到所学习的内容整体来说难度不会特别大
在这块儿更希望大家是掌握steam的一些基本使用
然后并且能够完成一次实战练习
我们就需要学一些更进阶一些知识了
比如说一些高级定位
然后比如说然后比如说一些这个异常情况的
就是自动化测试
UI自动化测试
Web自动化测试过程当中常见的一些情况的处理
窗口切换
一些弹框
包括一些自动化关键数据记录
然后帮我们去分析问题
然后也会给大家带来一次实战
然后并且还有对应的这个直播的训练营
然后再高级的部分呢
最主要的就是我们的一个屏
然后以及这个关于截图的一些封装好
每一个级别我们都会给大家带来一次实战
然后这个实战这个录播
这个整体来说时常不会特别长
大家每一周都要把握好时间仔细去看
然后在最后呢
就是这个自身和拓展是属于大家选修的部分
这个基础打得比较好的话
可以这个去了解一下
然后这个是相关的面试题
是持续更新的一个状态
目前已经录制的是这样的一些内容
那这个这个第一个章节
就不给大家讲那么多了
就不做那么多的一个废话了
那最重最最重要的是
我们一定要按照老师给大家提供的这样的一个学习路线去进行学习
那这个是我们本节课的一个课程目标
首先我们先来看一下
外部自动化测试它的一个价值体现在哪些方面
也就是说我们为什么要做外部自动化测试
那前面的selenium的安装还有介绍呢
不管是Mac还是Windows都是一样的
所以这块儿没有什么差别
好
先给大家简单介绍一下selenium
然后上面的这一部分是Celine的这样的一个官方网站
Celine的这个官方网站大家可以看到有非常全的一个信息
然后有下载的部分
然后有文档的部分
然后以及它的一些介绍等等的一个内容
那selenium它是一个什么样的工具呢
它是一个用于做web浏览器测试这样的一个工具
那它支持浏览器
包括我们的IE firefox Safari Chrome edge等等
所以它是一个支持多浏览器的web浏览器
外部浏览器测试的一个工具
那它有第二个优点呢
就是它可以它是支持多语言的
它使用起来非常简单
可以使用Java Python等多种语言去编写我们的一个用例脚本
他其实主要由三大三个部分构成
那这三大块儿呢
分别就是我们的一个web driver idea he great的web driver呢
会在我们后面写web自动化测试脚本的时候
然后还有idea呢
是这个slim用来录制的这样的一个工具
还有我们的司机name great
它是用来做分布式的这样的一个工具
那c LIM我们了解完c LIM的一些基础信息之后
我们再来简单看一下c name的这样的一个结构
那详细的说明呢
会在斯丽妮姆阿原理介绍这个录播里面会给大家进行详细介绍
我们在这儿简单给大家带一下
那这张图是什么意思呢
我们从左往右看
这个意思就是说他弟slim的这样的一个工作原理
它使用多种这个编程语言
然后去调用我们selenium的这样的一个服务
然后这个selenium收到变成圆的请求之后
他就会去调用我们浏览器对应的一个驱动
比如说这个驱动呢
比如说就是我们的Chrome driver IE driver和driver等等
多利其他包括这个Safari
他们每个浏览器呢
那这个不同的driver呢
它就会调用不同的这个浏览器
它就是专门用来调用谷歌浏览器的这样的一个驱动去进行使用的
了解完那个架构之后呢
我们再来看这个web自动化测试环境它的一个配置步骤有哪些
首先第一个呢
我们需要先去安装我们的一个拍摄环境
我们要保证我们的拍摄环境是已经安装完成的
然后第二个部分呢
就是需要去安装一下我们c LIM的这样的一个依赖
我们需要去进行这个浏览器驱动的一个下载与配置
那在那它这个操作系统
比如说Mac和Windows
主要就是在于这个第三个步骤
前两个步骤其实都是一模一样的
那在这里呢
需要注意的是谷歌浏览器和火狐浏览器
我们选择一个去进行配置就可以
在这里更建议大家使用我们的一个谷歌浏览器
那斯利姆他的依赖是如何安装的呢
在这里他有两个前提
是要准备好我们的Python环境和我们的一个pad工具
因为我就不做过多的一个介绍啦
这部分在我们的Python录播里面是有的
那第二个部分呢
就需要去安装一下我们的这个随你们的一个环境
那安装也非常简单
直接使用pop in stores Linux即可
然后现在呢
进入我们的一个
然后进入拍场之后
它有两种安装方式
第一种是直接通过派Tom去进行安装
我们进入我们的settings
找到这个past inter pre ter
我们设置好这个pass inter pre ter之后呢
在这个地方我们就可以看到它这个Python解释器对应的一个依赖
那在这我们就可以点这个小加号
然后输入Xu Li Ning
然后再点击一下音色
就可以成功安装了
然后在这当它提示有这个绿色条子
说package thing installed successfully呢
就证明我们已经安装成功了
然后如果说不习惯使用这个idea
或者说你用的是Vs code
那你也可以直接打开你们的命令行
然后输入pap in stores in
这样也是可以的OK
然后这样子它也提示我们安装成功了
然后我们输入一下pap list检查一下看看有没有安装成功
那在这我们看到我们第一猛证明
我们的这个CM的这个依赖库呢
先发我们的PPT
接下来我们来看一下driver的下载与配置
那这个driver的下载与配置呢
是我们刚开始学习web自动化测试必不可少的一个步骤
同时也是刚开始学习的同学比较容易踩坑的一个步骤
我们先来看一下它有哪几个步骤
我们需要下载浏览器对应的一个driver
那谷歌浏览器和火狐浏览器
其实我们选择一个就可以了
我们需要去配置我们driver对应的一个环境变量
那第三个步骤呢
我们需要去重启一下我们的命令行工具
验证是否配置成功
都会带着大家一一去进行练习
然后这个链接呢
其实就是我们CMCM官网的一个链接
它里面写了这个对应的这个浏览器
还有它支持操作系统以及它对应的下载链接
因为他一些网站
由于这个网络限制一个原因
所以说大家可以直接用我们PPT里面对应的网站就OK了
我们首先先来看一下Windows的配置步骤
那如果想看Mac的配置步骤的同学
大家可以把进度条往后拉
后面有Mac配置步骤的一个教学
那我们看一下Windows详细配置的有一个步骤参考
关于这个步骤参考写了一个帖子
然后大家可以自行点我们PPT里面的这个帖子去看
那如果说觉得帖子看不太明白的同学
可以跟着我们的这个视频
一步一步的跟着老师一起去配置好
那我们Windows的第一个步骤呢
就是我们前面说了就是driver的一个下载
那首先我们先来看谷歌浏览器的这样的一个配置
就是下载我们的一个Chrome driver
那Chrome driver他下载需要注意什么呢
那首先呢
需要注意的第一个细节就是需要确定和浏览器匹配的这样的一个Java版本
需根据使用的操作系统下载相应的一个Chrome driver
然后在这个地方呢
就是我们在这个右边呢
就是我们对应的一个淘宝镜像的这样的一个地址
然后在这儿大家可以看到有这么多的一个版本
那哪一个版本和我们的浏览器是一致的呢
我们怎么样去看呢
首先我们点开右上角
然后在这儿有一个设置
然后在设置里面呢
有个叫做关于Chrome
然后在这儿
我们就可以看到我们crew
Driver的一个对应的版本是98.0.4758.102OK
我们找一下在我们刚刚打开的淘宝镜像找一下有没有98.0.4758.102OK
我们看一下102OK
没有任何问题
然后点一下这个102这个链接
我们现在就已经知道这个版本适合我们的浏览器是匹配的版本
那接下来我们就要选择对应的操作系统了
我这个我现在给大家演示的呢
所以说我们就直接下载这个N32
然后在这里大家需要注意的是
不管你是64位的操作系统还是32位的
你都下这个就OK了
然后我们点击一下
然后我们给他下载到我们的一个桌面
我们这个压缩包
我们就下载完成了
那这个是我们的第一个步骤
就是Chrome driver的这样的一个下载
那下载好之后呢
我们可不可以直接去进行使用
那我们第一步肯定首先还是要给他解压一下的
那我们尝试给他先做一个解压
下载刚刚是这个一对吧
你解压一下
好解压之后呢
可以看到有一个叫做chromedriver.x这样的一个文件
那这时候打开我们的品牌Tom
我们这时候新建一个文件
叫做first
我们的第一个
那我们在这儿呢
做事也非常简单
我们直接from swimming import
Web driver就可以啦
我们只做第一个操作
就是打开一个网站这样的一个操作
然后我们怎么做呢
我们在这儿首先第一个变量叫做driver driver等于什么呢
等于我们的一个web driver点
然后注意
然后点Chrome还不行
我们一定要在Chrome后面加一个括号
一定要在
Cool
后面添加括号
代表实例化这个类
好
我们可以调用这个driver.get方法
然后在这里呢
输入我们想打开网址的URL
比如说我们以这个测试人为例吧
我们打开这个测试人
然后这个时候呢
我们执行一下我们的脚本润一下
这是我们发现脚本报错了对不对
报什么错误
他说Chrome driver execute ble needs tobe in pass
然后在这儿呢
是新手非常容易常见的一个问题
为什么我们这样子调用就会有问题呢
这是因为这是因为他在寻找的过程当中
如果你没有把这个Chrome Java配到环境变量里面
你就必须要通过关键字去指定它的路径
所以说
建议大家下载好科目二之后就直接配套环境变量
你一旦发现了这个错误
一般就是由环境变量所导致的
所以接下来呢
我们就进行下面的这个步骤的一个操作
就是配置环境变量的这样的一个操作
然后怎么去配置呢
首先我们先点击这个放大镜
输入一个环境变量
然后进入之后呢
我们点一下这个环境变量
我们在下面的系统变量这里
我们找到这个pass
需要给他新加这样的一个路径进去
我们刚刚我们看一下我们刚刚下载好的这个Chrome driver
我们是下载这个Chrome driver
我就尽量
不要让他直接去练到我们的一个桌面
建议大家是放在你们的地盘的某个文件当中
比如说我们在的盘这里新建一个叫做driver
好心塞这个driver之后
我们把这个对应的这个Chrome driver先给他丢进去
好
我们现在就把这个Chrome driver这个路径就丢进来了
然后我们现在来看一下
那它对应的一个路径是什么呢
对应的路径就是这个路径大家看好了
打开我们的环境变量
环境变量
然后我们在这儿找到我们的pass
然后在这儿新增一个新建
然后叫做这个我们刚刚在这个里面看到的这条路径
新建粘贴过来
然后点击确定
一定要全部确定确定
一路确定下来之后呢
我们要重新关掉我们的CMD
然后打开
重新打开我的命令行
然后输入输入一个Chrome driver
我们发现是不是就这个有对应的一个提示信息
并且告诉我们你的Chrome driver的版本是多少
那这样子就说明什么
就说明你的这个Chrome driver就配置成功了配置成功了
现在回到我们的PPT
那我们前面说了
那当我们在Windows里面输入Chrome driver
然后或者输入这个Chrome driver杠杠version也是OK的
我现在也可以输入一下看看
不是说一下我们发现有这个内容就说明配置成功了
而这个第三个步骤验质Chrome driver是否成功
大家需要注意的是
一定要重启你们的CMD才可以
好
那我们前面说的这个Chrome driver之外呢
如果说有的同学他可能不想配置这个Chrome driver
只想使用我们的一个火狐浏览器
对吧
那这个火狐浏览器的配置呢
需要注意的是
首先是下载
他是没有这个Chrome Java类似一个对应关系的
它需要下载最新的一个Java版本就OK了
然后根据使用的操作系统去下一下载相应的这个driver
然后同样的我们在这儿提供了一个地址给大家
大家直接打开就OK了
我们把这些其他的链接观一观
你直接打开
我们在这儿发现就有这么多的一个版本
那不一样
我们直接下载它最新的这样的一个版本
我们找一下他最新的一个版本是多少找一下时间
就是这个V30这个版本吧
我们下载一下
它这里就是分了这个36位和64位的一个操作系统了
所以说我们直接选择跟自己操作系统匹配的这样的一个版本呢
所以我就直接下载64了
我们的这个这个driver就下载成功啦
那接下来呢
还需要去配置一下这个环境变量
和我们的这个Chrome driver是一致的
那我们只需要在我们的这个D盘里面
我们再添加一个路径好了
比如说在这个driver这里我们再加一个
再新建一个文件夹叫做
或者说我们可以直接把所有的这个driver
全部丢到我们的这个
丢到我们刚刚和Chrome driver配置的同一个浏览器
我们就不需要再重复的去进行环境变量的一个配置了
那我们直接把刚刚下载这个证儿丢进来
解压一下
好
那我们把它丢到我们刚刚已经配置好环境变量的这个driver的这个路径下面
我们已经把这个Java路径配置过了丢进来OK
接下来我们只需要这个打开我们的CMD
然后输入一个Jack driver
OK
我们发现
他这个版本有显示出来它对应的一个0.30
证明我们的这个这个driver也配置成功了那如果说你的这个环境变量没有配置过的话
还需要再重复的去给它进行一下配置
就是我们这个巩固火狐浏览器的一个驱动的这样的一个配置的一个流程
和我们的这个谷歌的这个驱动是一模一样的
接下来呢
我们来看一下在Mac系统上面它的这个driver driver的一个下载与配置
那我们来看一下在Mac上面呢
其实和我们前面学的Windows是一致的
需要去下载浏览器对应的一个driver
那谷歌浏览器和火狐浏览器
我们选一个就可以了
是我们官方文档对应的一个链接
然后在这儿我们可以看到浏览器支持的系统
然后下载的路径等等
需要我们去配置一下Java的一个环境变量
然后第三个步骤
住的注意
一定要去重启你们的命令行工具
包括你们的拍场
包括你们的idea
然后重启完成之后呢
我们再去验证一下是否配置成功
在这里给大家说一下
就是这个环境变量的配置呢
需要我们在后面写代码的时候给他去指定路径是非常麻烦的
所以建议大家一开始就直接配好是最省事儿的
那接下来我们继续往后看它具体的一个操作
首先我们先来看
在Mac系统上面
我们需要先去下载一下我们的Chrome driver
然后在下载过程当中呢
第一个步骤我们需要先确定和浏览器匹配的这样的一个jar版本是多少
根据使用的操作系统去下载相应的一个Chrome driver
然后这个是需要注意的两个细节
我们现在打开我们的淘宝镜像
其实看官网也是可以的
但是如果没有那个翻墙软件的话
所以可能不好访问
建议大家直接去看我们的淘宝镜像就OK了
我们看到这么多个版本
那我们具体下载哪一个呢
不要直接去找下载哪个版本儿
是看和哪个和你的浏览器是匹配的
我们点一下这儿有一个设置
进入谷歌浏览器设置之后呢
我们点一下关于Chrome在这儿
它有一个版本的一个提示
98.0.4758.102的一个版本
那接下来呢
我们就找一下有没有这个98这个版本
找一下98.0.4752.102 OK
我们点进去我们发现
他就有两个
一个是非M1的
大家根据自己的操作系统去进行选择
因为我是非M1
如果是M1的同学
然后现在呢
我就把它下载到了我的这个桌面上面
是这个一
然后这个时候呢
对不对
我们需要给他做一个解压
解压完成之后出来一个这个Chrome driver
这个是我们所需要的那个Chrome driver啊
然后那个假压缩包可以给他删掉了
我们下载完成之后
我们再来看我们的第二个步骤
那第二个步骤呢
就需要我们去进行环境变量的一个配置
内环境变量配置呢
一共有这几个步骤
每一个步骤都需要注意
每个步骤都有它自己的一个细节
是需要进入我们的一个终端
然后确认当前的一个shell环境
是这个echo share
然后第二个步骤呢
是根据自己的shell环境去选择执行命令
如果是病
那么就选择vim.bash profile
则VMZHRC
因为你使用不同的shell环境
去读取的这个环境变量
环境变量配置文件是不一样的
注意这一点
我们需要在文件当中去添加这样的一个语句
替换成我们Chrome driver所在的一个路径
然后第四个步骤呢
就是重启我们的命令行工具
OK
我们先完成第一个步骤和第二个步骤
我们打开我们的一个终端
然后这个时候呢
我给大家把我我给大家把前面的部分清一下
那这个时候呢
我们看一下我们当前的一个shell环境echo
是OK
这时候我们就可以看到我们使用的是兵败时这样的一个这样的一个这个这样的一个shell环境
那我们直接根据我们的PPT进行选择拜兵败势对吧
我们直接VM直接复制就完事了然后复制一下进去之后呢
这个就是我们的一个环境变量的一个配置文件
然后这个是我之前
之前这个配置的一些
然后接下来呢
我们就需要把我们的
我们就需要把我们的这个Chrome driver配置文件
然后给他的把它这个路径给他配置进来
那我们首先先看一下
首先我们现在空Java给他放在市桌面对吧
那放在桌面肯定是不行的
我们可以进入我们的家目录
然后可以新建一个文件夹
比如说就叫做这个
比如说叫做歪不
Driver
Chrome吧
我们名字长一点
好
那这时候我们进入这样的一个路径
然后接下来我们把我们的Chrome driver给他拖进去
拖进去之后
我们一定要记得我们这个所在路径是什么
首先是在我们的家目录下面的一个叫做web driver Chrome这样的一个文件夹
那我们在终端里面
我们找到这样的一个路径
我们先给他退出出来
重新重新打开
重新进入
然后这时候我输入这个Chrome driver
大家可以看到
那这时候呢
我需要进入我们刚刚的一个配置文件的一个路径
好
找到我们的Chrome driver的地方
这时候我们在为了好方方便我们粘贴路径
再开一个窗口
在这儿share这个新的窗口
然后然后这时候找到我们的一个
找到我们的一个那个QQ Java的一个所在路径
是不是我们的家目录
家目录就是这个波浪线线
我们LS一下
我们发现有这个web work room对吧
我们CD进去
我们LS一下
我们发现就有一个可执行文件Chrome driver对吧
那接下来我们就要把现在这个路径给他配入到我们的环境变量当中
然后我们PWD一下
这个就是我们现在的一个路径
我们等一下就给他复制一下
然后这时候呢
我们需要先把我们的那个格式PPT里面这个export这个格式给它复制过来
复制过来之后呢
我给大家前面前后加个空行
大家好看一点
复制过来之后呢
我们还需要把中括号儿这个地方替换成我们刚刚所生成的那个路径
注意别别删多了
一定要有冒号儿
就是你的这个pass后面一定是有冒号儿的
而且一定要这个Dollar pass
然后这个时候呢
我们就给它复制进来
复制进来之后我们摁退出键
然后冒号儿WQ保存一下环境变量配置文件
对吧
如果说我们输入Chrome driver
我们就会发现是是这个不能使用的
那这时候我们再把它关掉
这时候就则需要重启一下我们的终端
然后输入
这儿这时候我们发现
我们是不是就给他配置成功了
那这个呢
就是我们Chrome driver在Mac上面的一个配置
然后回到我们的PPT
那最后一个步骤就是去验证一下我们的Chrome driver
如你在验证的这个过程当中呢
如果说没有出现截图这样的结果
或者跟刚刚演示一个结果
它提示的可能是不是命令或者什么之类的
那这个时候怎么去解决呢
那这个时候我们就要去检查一下是不是我们的这个环境变量配错了
或者说是不是我们忘记重启我们的一个终端啦
那我们看完这个Chrome driver的一个配置之后呢
我们再来看我们的这个这个driver
这个driver就是火狐浏览器的一个驱动的一个配置
它的步骤和我们前面都是一模一样的
第一步永远都是下载
然后第三步验证是否配置成功
只需要注意一点
就是这个这个这个driver呢
它是没有和Chrome driver类似的对应关系的
我们直接下载最新的就OK了
然后我们在新标签中打开
打开之后我们找到这个最新的
我们直接下
然后找到Mac版本
然后桌面存储
和刚刚所有的操作都是一模一样的
然后下载完成之后
解压双击解压
解压之后我们要这个黑色的这个执行文件
我们可以在这儿新建一个文件
叫做这个web driver
火狐firefox
好
我们把这个driver给他丢进去
我们统理
我们找到我们这个firefox这个文件夹
Web firefox
然后同理
我们现在给他去编辑一下
我们把这个路径先copy一下
我们还是新建一个窗口吧
这样好弄一点
这样子搞起来方便一点
我们进入我们的一个flash profile环境
变量配置文件
OK
我们给它加一个Chrome driver
我们只需要把上面的这个部分给他复制一下
复制之后呢
要把后面这个改成这个firefox
那我们还是粘贴吧
它这个手动手敲还是比较容易出错的
然后重启命令
关掉关掉
正如我们输入
j Co driver杠杠version
输入这个信息
并且有内容
就证明你已经配置成功了
其实我们不需要这么麻烦
不需要每一个刚刚呢
是为了让大家好理解
就是我们的这个
我们的这个driver的一个配置
是必须配置给他配置到这个环境变量文件当中去的
那其实我们需不需要每一个driver都给他配置一个文件呢
我们可以直接建一个叫做web driver的这样的一个文件
然后把它的这个这两个都给它挪过去
然后这个可以删掉了
那这个也拖到桌面
然后它的这个文件夹也可以删掉了
然后我们直接两个全部放过来
然后放过来之后
就是我们这时候还是要去改一下我们的环境变量配置文件
因为它们的路径变了嘛
Perfect然后在这个地方呢
因为我们这两个路径已经全部删除了
我们只留一个就好了
只要留一个路径出来
那其他的这个就是它这里面的配置
都会给它加载进去的
这个文件夹的名字叫做web driver好
然后退出
然后再打开
这是我们直接输入数目指纹
然后发现没有问题
然后输入这个driver
你直接输这个driver
你要加一个杠儿水
这个是他们这个两个driver之间不同的一个设置吧
然后在这儿呢
我们可以看到这个driver和Chrome driver就都配置成功了
在所有的环境都准备好之后
比如说我们的steam依赖
比如说我们的所有的浏览器驱动
我们的driver都配置好之后呢
我们来看一下它是如何和我们的Python代码结合起来去进行使用的
就是先导入一下我们的C1拧包
然后后面会引用到
我们会创建一个driver的一个实例
我们可以使用java.get打开我们的这个网址
我们会关闭这个driver这个进程
然后浏览器也就会跟着关闭了
我们来尝试编写一下
我们都已经已经写过一遍了
那钱第一个步骤先打包
打完包之后呢
这个创建一个专业实力
那最后我们再给他加一个quit的一个操作
它打开之后执行完上面的代码
它就会关掉浏览器了
那这时候我们来执行一下右键
大家可以看到一闪而过
这是因为他在打开之后呢
但是证明
我们的这个Python脚本
是没有任何的一个问题的
那这个是我们在Chrome浏览器的一个应用
那我们接下来来看一下它和这个火狐浏览器的一个演示一个应用
那其实大家可以看到
所有的代码基本上都是一样的
只有这里有一点区别
那之前呢
我们实例化的是一个Chrome的一个对象
我们要实例化的是一个firefox的这样的一个对象
我们来给大家做一个事例
我们在这里又见你
叫做
这个比如说我们叫他firefox
Wap
然后我们在这里统统里
我们第一个步骤先from swimming import driver
然后第二个步骤呢
创建一个a driver的一个实例
等于我们的这个web driver点
然后firefox注意
一定要加括号儿
然后接下来呢
就是直接这个driver.get
我就直接复制前面这个测试人的这一行了
这一行是一模一样的
那这次我就不做quit操作了
就让他展示的久一点
然后我们右键运行一下
那这个时候按理来说
它就会掉起我们的一个火狐浏览器
并且进入到我们的一个测试的页面
是不是吊起我们的火狐浏览器
并且成功的进入到了我们的测试页面
那这一部分呢
就是我们后面的这个代码的一个演示的部分
那只要你能够成功的调起浏览器
并且打开网页
你的Chrome driver
你所有的这个web自动化应该要准备的环境就准备好了
[以下字幕均由机器生成]在这一章节呢
[以下字幕均由机器生成]我们要学习的内容是selenium IDE的用力录制
在自动化测试的过程当中
阿斯蒂尼姆提供给我们的一种方式是非常适用于刚开始学习自动化测试以及对于没有任何代码基础的一个同学
它可以通过录制回放的一个方式呢
00:03 / 15:26     这是一句话
[00:03 / 15:26     这是一句话]
[00:03 / 15:26]     这是一句话



## Web 自动化测试价值与体系
[00:05 / 15:26]     [以下字幕均由机器生成]是我们web自动化测试的第一个章节



## Web 自动化测试价值与体系
[00:18 / 15:26]     为什么我们要做外部自动化测试



## Web 自动化测试价值与体系
[00:36 / 15:26]     也就是说我们为什么要做外部自动化测试



## Web 自动化测试价值与体系
[00:47 / 15:26]     是由我们的测试工程师对我们的被测系统的页面做一些点击或者输入等等类型的一个操作



## Web 自动化测试价值与体系
[00:05 / 15:26]     [以下字幕均由机器生成]是我们web自动化测试的第一个章节
